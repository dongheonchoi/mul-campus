--복습

SELECT * FROM PRODUCT3 
ORDER BY PRICE DESC

SELECT NAME, CONTENT, PRICE FROM PRODUCT3
ORDER BY COMPANY

SELECT DISTINCT COMPANY FROM PRODUCT3

SELECT NAME, PRICE*12 AS PRICE5 FROM PRODUCT3

SELECT * FROM PRODUCT3 p 
WHERE PRICE = 3000

SELECT NAME, PRICE, COMPANY  FROM PRODUCT3 p 
WHERE PRICE BETWEEN 3000 AND 6000

SELECT NAME , COMPANY FROM PRODUCT3
WHERE COMPANY = 'c100'

SELECT NAME , COMPANY FROM PRODUCT3
WHERE NOT COMPANY = 'c100'

SELECT NAME , COMPANY FROM PRODUCT3
WHERE COMPANY = 'c100' OR COMPANY = 'c200'

SELECT * FROM PRODUCT3
WHERE NAME LIKE '%4'

SELECT * FROM PRODUCT3
WHERE NAME LIKE '%food%'

UPDATE PRODUCT3 
SET CONTENT = '품절'
WHERE PRICE = 5000

UPDATE PRODUCT3 
SET IMG = '0.PNG' , PRICE = 10000
WHERE ID ='100' OR ID = '102'

DELETE FROM PRODUCT3 p 
WHERE COMPANY  = 'C100'

DELETE PRODUCT3

--

SELECT CONCAT(concat(empno, ':'), ENAME) AS CONCAT_RESULT FROM emp

SELECT EMPNO || ':' || ENAME AS CONCAT_RESULT FROM EMP



SELECT LENGTH(TRIM(ENAME)) FROM EMP

--공백도 갯수를 센다

SELECT LENGTH(ENAME) FROM EMP

SELECT TRIM(BOTH 'A' FROM ENAME) FROM EMP --양쪽끝의 A 삭제

SELECT TRIM(LEADING 'A' FROM ENAME) FROM EMP --앞쪽의 A를 제거

SELECT TRIM(TRAILING 'A' FROM ENAME) FROM EMP --뒤쪽의 A를 제거

SELECT REPLACE(ENAME, ' ', '') FROM EMP 

UPDATE EMP
SET COMM = 0
WHERE COMM IS NULL

SELECT *
FROM EMP

SELECT SAL + COMM AS TOTAL 
FROM EMP

SELECT LENGTH(ENAME) FROM EMP

SELECT LENGTH(ENAME) 
FROM EMP
WHERE JOB = 'MANAGER'

SELECT ENAME, JOB FROM EMP
WHERE COMM IS NULL 

SELECT HIREDATE FROM EMP
WHERE COMM IS NOT NULL

SELECT SUBSTR(ENAME , 2) FROM EMP

SELECT SUBSTR(JOB , 1, 3) FROM EMP

select REPLACE(ENAME, 'K', 'P') from EMP

SELECT EMPO || '번은' || ENAME || '입니다' FROM emp

SELECT HIREDATE,
TO_CHAR(SYSDATE, 'MM') AS MM, TO_CHAR(SYSDATE, 'DAY') AS DAY
FROM EMP

SELECT JOB,
CASE JOB
	WHEN 'MANAGER' THEN 'LEVEL1'
	WHEN 'SALESMAN' THEN 'LEVEL2'
	ELSE 'LEVEL3'
END AS LEVEL_RESULT
FROM EMP 


SELECT SAL + COMM AS TOTAL
FROM EMP

SELECT *
FROM EMP

----------------------------------

SELECT * FROM EMP

SELECT COUNT(*)
FROM EMP e 

SELECT COUNT(SAL)
FROM EMP

--집계함수
SELECT COUNT(SAL), SUM(SAL), AVG(SAL), MIN(SAL), MAX(SAL)
FROM EMP
WHERE JOB = 'SALESMAN'

--JOB 의 같은 직업끼리 그룹을 묶는다.
SELECT COUNT(SAL), SUM(SAL), ROUND(AVG(SAL)), MIN(SAL), MAX(SAL)
FROM EMP
GROUP BY JOB

SELECT COUNT(SAL), SUM(SAL), ROUND(AVG(SAL)), MIN(SAL), MAX(SAL)
FROM EMP
GROUP BY JOB
ORDER BY JOB DESC

--결과로 나온 값을 가지고 다시 추려내고 싶을 경우에는 HAVING을 사용한다.
SELECT COUNT(SAL), SUM(SAL), ROUND(AVG(SAL)), MIN(SAL), MAX(SAL)
FROM EMP
GROUP BY JOB
HAVING COUNT(SAL) >=4 -- 그룹을 지어서 검색 후, 필터링을 하고자 하는 경우
ORDER BY JOB DESC  -- 이미 모든 검색이 다 끝난 후, 그 결과를 정렬하고자 하는 경우 맨끝

SELECT COUNT(ENAME) FROM EMP

SELECT COUNT(ENAME)
FROM EMP
WHERE DEPTNO = 20 OR MGR <= 7700

SELECT MIN(SAL)
FROM EMP
WHERE DEPTNO = 10 OR DEPTNO = 20

SELECT MIN(SAL), MAX(SAL), SUM(SAL)
FROM EMP e

SELECT AVG(SAL)
FROM EMP
GROUP BY DEPTNO

SELECT SUM(SAL)
FROM EMP
GROUP BY DEPTNO
ORDER BY DEPTNO

SELECT AVG(SAL)
FROM EMP
GROUP BY DEPTNO 
HAVING AVG(SAL) >= 2000
ORDER BY DEPTNO DESC

SELECT COUNT(ENAME), AVG(SAL)
FROM EMP e 
WHERE JOB = 'MANAGER'


SELECT COUNT(*)
FROM EMP
WHERE ENAME LIKE '%S%'

SELECT COUNT(*)
FROM EMP
WHERE SAL >= 3000 AND COMM IS NOT NULL
ORDER BY SAL DESC





CREATE TABLE "HR"."MEMBER" 
   (	"ID" VARCHAR2(10), 
	"PW" VARCHAR2(10), 
	"NAME" VARCHAR2(10), 
	"TEL" VARCHAR2(10), 
	 CONSTRAINT "MEMBER_PK" PRIMARY KEY ("ID"))
	 
	 

CREATE TABLE "HR"."BBS" 
   (	"NO" VARCHAR2(10), 
	"TITLE" VARCHAR2(10), 
	"CONTENT" VARCHAR2(10), 
	"WRITER" VARCHAR2(10)
)

--------------------------------------
-- JOIN: 하는 이유?? 검색을 할때 항목이 여러개의 테이블에 흩어져서 존재할때
-- 		 테이블을 모아서(합해서) 검색을 하고 싶은 경우
SELECT *
FROM "MEMBER" M , BBS B
WHERE M.ID = B.WRITER


--INNER JOIN 공통된것만 가져오기
SELECT B."NO", TITLE, NAME
FROM "MEMBER" M , BBS B
WHERE M.ID = B.WRITER 



----- INNER JOIN 
SELECT EMPNO, ENAME, JOB, D.DEPTNO, LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO

SELECT *
FROM "MEMBER" m 
LEFT OUTER JOIN BBS b
ON (m.ID = b.WRITER)

SELECT *
FROM "MEMBER" m 
RIGHT OUTER JOIN BBS b
ON (m.ID = b.WRITER)

SELECT *
FROM EMP E 
LEFT OUTER JOIN DEPT D
ON (E.DEPTNO = D.DEPTNO)

SELECT *
FROM EMP E 
RIGHT OUTER JOIN DEPT D
ON (E.DEPTNO = D.DEPTNO)

--INNER JOIN 
SELECT *
FROM "MEMBER" m , BBS b
WHERE m.ID = b.WRITER 

--OUTER JOIN(LEFT, RIGHT)
SELECT *
FROM "MEMBER" M
LEFT OUTER JOIN BBS B
ON (M.ID = B.WRITER)


SELECT M.ID, M.NAME, B.TITLE, B.CONTENT
FROM "MEMBER" M
LEFT OUTER JOIN BBS B 
ON (M.ID = B.WRITER)

SELECT *
FROM "MEMBER" M
RIGHT OUTER JOIN BBS.B
ON (M.ID = B.WRITER)








